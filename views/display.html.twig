<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8"/>
		<link rel="stylesheet" type="text/css" href="/static/display.css">
		<link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css'>
		<link rel="stylesheet" type="text/css" href="/static/weather-icons/css/weather-icons.min.css">
		<link href='http://fonts.googleapis.com/css?family=Play:400,700' rel='stylesheet' type='text/css'>
		<title>ReflectOS Display</title>
		<style>
		</style>
	</head>
	<body>
		<div id="display" class="profilId-{{profil.id}}">
			<div id="app-grid">

				{% for row in profil.widgets %}
				<div class="row row-widgets">
					{% for cel in row %}<div class="cel width-{{cel.width}} {% if cel.widget != null %}wid-{{cel.widget}}{% endif %}">
					</div>{% endfor %}
				</div>
				{% endfor %}

		</div>
		<!-- Script Zone -->
		<script src="/socket.io/socket.io.js"></script>
		<script type="text/javascript" src="/static/jquery-2.1.3.min.js"></script>
		<script type="text/javascript" src="/static/rejexFilter.js"></script>
		<script>
			var socket = new io();
			var widgets = [];
			var backApps = [];

			//A changer !!!!
			socket.emit("getBackApp","bing-background");

			$(".cel:regex(class,wid\-(.*))").each(function(index) {
				var widgetId = $(this).attr("class").replace(/.*wid\-(.*)/i,"$1");
				socket.emit("getWidget",widgetId);
			});

			socket.on("openWidget",function(data){
				var widgetContainer = $(".wid-"+data.infos.id);
				if(widgetContainer != null)
				{
					var index = widgets.length;
					widgets.push(data.infos);
					widgetContainer.html(data.html);
					$("style").append(data.css);
					eval("widgets["+index+"].onLoad = "+data.onLoad);
					eval("widgets["+index+"].onUpdate = "+data.onUpdate);
					widgets[index].onLoad();
				}
				else
				{
					console.warn("Le widget "+data.infos.name+" n'a pas de conteneur associ√©");
				}
			});

			socket.on("refreshWidget",function(data){
				for(var i = 0; i<widgets.length; i++)
				{
					if(widgets[i].id == data.infos.id)
					{
						widgets[i].onUpdate(data.data);
						return ;
					}
				}
			});

			socket.on("openBackApp",function(data){
				var index = backApps.length;
				backApps.push(data);
				eval("backApps["+index+"].onLoad = "+backApps[index].onLoad);
				eval("backApps["+index+"].onUpdate = "+backApps[index].onUpdate);
				backApps[index].onLoad();
			});

			socket.on("refreshBackApp",function(data){
				for(var i = 0; i<backApps.length; i++)
				{
					if(backApps[i].id == data.id)
					{
						backApps[i].onUpdate(data.data);
						return ;
					}
				}
			});

		</script>
	</body>
</html>